local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wally2')))()
library.options.underlinecolor = Color3.fromRGB(106, 13, 173)
local w = library:CreateWindow('County Jail Roleplay')
local lp = game.Players.LocalPlayer
local Mouse = lp:GetMouse()


local activeESPs = {}
local function createESP(name, weapons)
	local target = game.Workspace[name]
	if target then
		activeESPs[name] = weapons
		local a = Instance.new("BillboardGui",target.Head)
		a.Size = UDim2.new(5,0, 5,0)
		a.Name = "UI"
		a.AlwaysOnTop = true
		local b = Instance.new("Frame",a)
		b.Size = UDim2.new(1,0, 1,0)
		b.BackgroundTransparency = 0.4
		b.BorderSizePixel = 0
		local c = Instance.new("TextLabel",b)
		c.Text = table.concat(weapons, ", ")
		c.Size = UDim2.new(1,0, 1,0)
		c.TextSize = 8
		c.BackgroundTransparency = 1
		c.BorderSizePixel = 0
	end
end

local function hasTool(tool)
	if lp.Character then
		local bp = lp.Backpack or lp.Character
		if bp:FindFirstChild(tool) then
			return true   
		end
	end
end
local Mouse = lp:GetMouse()
local dropped = {}
local toolz = {"Keycard", "Glock 19", "Glock 17", "P226", "USP Tactical", "Beretta 92FS", "MP5", "M4A1", "G36C", "Uzi", "R870", "Shiv", "Makarov", "MP7", "UMP 40"}
game.Workspace.ChildAdded:Connect(function(child)
	if not hasTool(child.Name) and table.find(toolz, child.Name) then
		table.insert(dropped, child)
	end
end)

 w:Button('Auto XP', function()

for i,v in pairs(getconnections(lp.Idled)) do
v:Disable()
end
local VirtualUser=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
VirtualUser:CaptureController()
VirtualUser:ClickButton2(Vector2.new())
end)

pcall(function() lp.PlayerGui.Data.AFK.AFKHandler:Destroy() end)
for i=1,5 do 
spawn(function()
while wait(1) do
lp.PlayerGui.Data.AFK.RemoteEvent:FireServer(false)
end
end)
 end
     
     
 end)
 local a = false
 w:Button('No Recoil', function()
     if not a then
         a = true
     while a do
     for i,v in pairs(getgc()) do
    if type(v) == "function"  and islclosure(v) and not is_synapse_function(v) then
        if debug.getinfo(v).name == "FireInTheHole" and getupvalues(v).value ~= 0 then 
            debug.setupvalue(v, 14, 0)
            debug.setupvalue(v, 15, 0)
        end
    end
end
wait(5)
end
end

 end)
 
 
w:Button('Instant Arrest', function()
	Mouse.Button1Down:Connect(function()
		if lp.Character and lp.Character:FindFirstChild("Cuffs") then
			if Mouse.Target.Parent:FindFirstChild("Humanoid") and Mouse.Target.Parent ~= game.Lighting or Mouse.Target.Parent ~= game then
				local Character = Mouse.Target.Parent
				local player = game.Players:GetPlayerFromCharacter(Character)
				if player and player.Team ~= lp.Team then
					local cr = lp.Character.Cuffs.MainEvent
					cr:FireServer("Cuff", Character.Humanoid)
				end
			end
		end
	end)
end)
w:Button('Always Innocent', function()
local mt = getrawmetatable(game) -- get game's metatable without invoking __metatable
local oldindex = mt.__index -- store a copy of the original metamethod
setreadonly(mt, false) -- unlock the metatable so we can modify it
mt.__index = newcclosure(function(self, k) -- The original metamethod is a C closure so we need to wrap the function in one
   if tostring(self) == "isInnocent" and k == "Value" then -- check if WalkSpeed is accessed from any instance
       return true
   end
   return oldindex(self, k) -- use the old metamethod if WalkSpeed is not being accessed
end)
setreadonly(mt, true) -- relock the metatable
end)
w:Toggle('Pickup Tools', {flag = "DropTog"}, function()
    spawn(function()
while w.flags.DropTog do
    wait()
	if #dropped > 0 then
		for i,v in pairs(dropped) do
			spawn(function()
				if v.Parent == game.Workspace then
					if lp.Character and lp:DistanceFromCharacter(v:FindFirstChildWhichIsA("Part").Position) < 15 then
						spawn(function()
							for i,v in pairs(v:GetChildren()) do
								if v:IsA("ClickDetector") then
									fireclickdetector(v)
								end
							end
						end)
					end
				end
			end)
		end
	else
		table.remove(dropped, dropped[v])
	end
end
end)
end)
local function removeESP(name)
	local target = game.Workspace[name]
	if target then
		activeESPs[name] = nil
		if target.Head:FindFirstChild("UI") then
			target.Head.UI:Destroy()
		end
	end
end
local function hasESP(name)
	local player = game.Players[name]
	if player.Character and player ~= nil and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 and player.Character:FindFirstChild("Head") then
		local target = game.Workspace:FindFirstChild(name)
		if target then
			if target.Head:FindFirstChild("UI") then
				return true

			end
		end
	end
end
local function teamCheck(player)
	if player.Team.Name ~= "Department of Corrections" and player.Team.Name ~= "Criminal" then
		return true
	end
end
local function getTools(player)
	if player.Character and player ~= nil and player.Character.Humanoid and player.Character.Humanoid.Health > 0 and player.Character.Head then
		local firsttool = player.Backpack:FindFirstChildWhichIsA("Tool") or player.Character:FindFirstChildWhichIsA("Tool")
		if firsttool then
			local tools = {}
			for i,w in pairs(player.Backpack:GetChildren()) do
				if w:IsA("Tool") then
					if w.Name ~= "Chicken" and w.Name ~= "Green soup" and w.Name ~= "Brown ?" then
						table.insert(tools, w.Name)
					end
				end
			end
			for i,w in pairs(player.Character:GetChildren()) do
				if w:IsA("Tool") and w.Name ~= "Chicken" and w.Name ~= "Green soup" and w.Name ~= "Brown ?" then
					table.insert(tools, w.Name)

				end
			end
			table.sort(tools, function(a,b)
				return a:lower() < b:lower()
			end)
			if tools ~= {} then
				return tools
			end
		end
	end
end

local function hasTools(player)
	if player.Character and player ~= nil and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 and player.Character:FindFirstChild("Head") then
		local firsttool = player.Backpack:FindFirstChildWhichIsA("Tool") or player.Character:FindFirstChildWhichIsA("Tool")
		if firsttool and firsttool.Name ~= "Chicken" and firsttool.Name ~= "Green soup" and firsttool.Name ~= "Brown ?" then
			return true
		end

	end
end









w:Toggle('Inventory ESP', {flag = "ESPTog"}, function()
	spawn(function()
		while w.flags.ESPTog do 
			wait(1)
			spawn(function() 
				for i,v in pairs(game.Players:GetPlayers()) do 
					if activeESPs[v.Name] == nil and not hasESP(v.Name) then 
						if hasTools(v) and teamCheck(v) then
							createESP(v.Name, getTools(v))
						end
						
					elseif activeESPs[v.Name] ~= nil then
						if hasTools(v) then
							if table.unpack(activeESPs[v.Name]) ~= table.unpack(getTools(v)) then
								if hasESP(v.Name) then
									removeESP(v.Name)
								else
									activeESPs[v.Name] = nil
								end
							end
						end
					else
						if activeESPs[v.Name] == nil and hasESP(v.Name) then
							removeESP(v.Name)
						end
					end
				end
			end)
		end
	end)
end)
local teleports = {
    ["Crim Base"] = CFrame.new(340.724518, -6.59994602, -1403.78088, 0.528508544, -3.52200913e-09, 0.848927975, 1.36208322e-09, 1, 3.3007943e-09, -0.848927975, -5.88187443e-10, 0.528508544);
    ["Afk"] = CFrame.new(427.432648, -3.00000048, -182.798706, -0.44808042, -2.85733144e-08, -0.893993258, 2.56979646e-08, 1, -4.48415811e-08, 0.893993258, -4.30664429e-08, -0.44808042);
    ["Max"] = CFrame.new(-280.033295, 29.1895714, -1065.19312, 0.978691697, -4.35876046e-08, 0.205335334, 5.41562777e-08, 1, -4.58503386e-08, -0.205335334, 5.59935422e-08, 0.978691697);
   
}
function teleport(location)
    local lp = game.Players.LocalPlayer
 lp.PlayerGui.Events.ResetEvent:FireServer("Reset")
print(teleports[location])
wait(7)
for i=1,65 do
    wait(0.05)
    pcall(function()
        game:GetService("Workspace")[lp.Name].HumanoidRootPart.CFrame = teleports[location]
end)
end   
    
    end
local new = w:Section("Teleports")
 w:Button('Crim Base', function()
teleport("Crim Base")
end)
w:Button('Maximum Security', function()
    teleport("Max")
end)
 w:Button('XP Farm', function()
teleport("Afk")
end)

while wait() do
	if not w.flags.ESPTog then
		for i,v in pairs(game.Players:GetPlayers()) do 
			if hasESP(v.Name) then
				removeESP(v.Name)
			else
				activeESPs[v.Name] = nil
			end

		end
	end
end
