
local function replace(str, pos, char)
	if #str:sub(pos - #str) == 5 then 
		return str:sub(1, pos - 1) .. char
	else
		return str:sub(1, pos - 1) .. char .. str:sub(pos - #str)
	end
end

local word;
local absent1 = "";
local correct = "_____";
local usedwords = {};
local index;

game.ReplicatedStorage.Remotes.SubmitGuess.OnClientEvent:Connect(function(p25, p26, p27, p28, p29)
	if p29 ~= nil then
		print("returning")
		correct = "_____";
		absent1 = "";
		usedwords = {};
		return
	end
	if p25 == true and word then
		table.insert(usedwords, word)
		local present = "_____";
		local absent = {};
		local letters = string.split(word, "")
		for i,v in pairs(letters) do 
			if p26[i] == "present" then
				--if not table.find(string.split(present, ""), v) then
				present =  replace(present, i, v)  
				--end
			end
			if p26[i] == "correct" then
				--if not table.find(string.split(correct, ""), v) then
				correct = replace(correct, i, v)
				--end
			end
		end
		for i,v in pairs(letters) do 
			if p26[i] == "absent" then
				if not table.find(absent, v) and not table.find(string.split(absent1, ""), v) and not table.find(string.split(present, ""), v) and not table.find(string.split(correct, ""), v) then
					table.insert(absent, v)
				end
			end
		end
		for i,v in pairs(absent) do 
			absent1 = absent1..v
		end
		local taa = {
			absent1;
			present;
			correct;
		}
		print(table.unpack(taa))

		local a = game:HttpGet("https://www.thewordfinder.com/wordle-solver/solve.php?w="..correct.."&b="..absent1.."&s=1&v="..present.."&")

		local b = game.HttpService:JSONDecode(a)
		local results = {}
		for i,v in pairs(b["results"]) do 
			if not table.find(usedwords, v:upper()) then
				table.insert(results, v:upper())
			end
		end
		print(#results, table.unpack(results))

		print("-------------------------------------")
	end
end)



game.ReplicatedStorage.Remotes.GameOver.OnClientEvent:Connect(function()
	absent1 = "";
	correct = "_____";
	usedwords = {};
	print("returning")
end)


local mt = getrawmetatable(game)
local backupnamecall = mt.__namecall
setreadonly(mt, false)

mt.__namecall = newcclosure(function(Self, ...)
	local args = {...}
	local method = getnamecallmethod()

	if (method == "FireServer") then
		if Self == game.ReplicatedStorage.Remotes.SubmitGuess then
			word = args[1]
		end
	end
	return backupnamecall(Self, ...)
end)

setreadonly(mt, true)
